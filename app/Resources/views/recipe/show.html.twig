{% extends 'base.html.twig' %}

{% block sidenav %}
{% if recipe.timers|length > 0 %}
<li class="no-padding">
  <ul class="collapsible collapsible-accordion">
    <li>
      <a class="collapsible-header active"> Minuteries<i class="material-icons">arrow_drop_down</i><i class="material-icons">timer</i></a>
      <div class="collapsible-body">
        <ul>
          {% for timer in recipe.timers %}
          <li>
            <a class="chrono" running=false data="{{ timer.time }}" init="{{ timer.time }}">
              {{ timer.name }} :  <span class="time">{{ timer.time|secondToTime }}</span>
              <i class="material-icons timer reset">refresh</i>
              <i class="material-icons timer play">play_circle_filled</i>
            </a>
          </li>
          {% endfor %}
        </ul>
      </div>
    </li>
  </ul>
</li>
{% endif %}
<li id="bring_button_left_menu">
  <div data-bring-import data-bring-language="fr" style="display:none">
    <a href="https://www.getbring.com">Ajouter a ma liste de course</a>
  </div>
</li>
{% endblock %}

{% block body %}
<!-- Modal Structure -->
<div id="ingredient-modal" class="modal bottom-sheet">
  <div class="modal-content">
    <h4>Ingrédients</h4>
    <div class="row">
      <div class="col s12">
        <ul class="collection with-header">
          {% for part in recipe.ingredients|sortByPart %}
          {% if part.id is defined %}
          <li class="collection-header"><h4>{{part.name}}</h4></li>
          {% endif %}
          {% for recipeHasIngredient in part.ingredients %}
          <li itemprop="ingredients" class="collection-item">
            {{ recipeHasIngredient.ingredient.name }}
            <span class="secondary-content">
              {% if recipeHasIngredient.ingredient.units|length > 0  %}
              <span>{{ recipeHasIngredient.value }}</span>
              <select class="selectIngredient" data="{{ recipeHasIngredient.value }}">
                <option value="1">{{ recipeHasIngredient.ingredient.defaultUnit.symbol }}</option>
                {% for ingredientHasUnit in recipeHasIngredient.ingredient.units %}
                <option value="{{ ingredientHasUnit.value }}">{{ ingredientHasUnit.unit.symbol }}</option>
                {% endfor %}
              </select>
              {% else %}
              {{ recipeHasIngredient|getUnit }}
              {% endif %}
            </span>
          </li>
          {% endfor %}
          {% endfor %}
        </ul>
      </div>
    </div>
  </div>
</div>

<!-- Tap Target Structure -->
{% if recipe.timers|length > 0 %}
<div class="tap-target" data-activates="left-bar-menu-button">
  <div class="tap-target-content">
    <h5>Encore plus de possibilités !</h5>
    <p>Utilisez les minuteries et ajouter les ingrédients à vos listes de course !</p>
    <a id="discover-feature-recipe-stop" class="waves-effect waves-light btn">Ne plus voir</a>
  </div>
</div>

<script>
$( document ).ready(function() {
  $("#discover-feature-recipe-stop").click(function(){
    $.cookie("discover-feature-recipe", "false");
  });
  if (!$.cookie("discover-feature-recipe")){
    $('.tap-target').tapTarget('open');
  }
});
</script>
{% endif %}

<div class="card hoverable" itemscope itemtype="http://schema.org/Recipe">
  <div class="card-image">
    {% if recipe.media %}
    <img itemprop="image" src="{% path recipe.media, 'big' %}">
    {% else %}
    <img itemprop="image" src="{{ asset('bundles/app/img/default.png') }}">
    {% endif %}
  </div>
  <div class="card-content row">
    <h1 class="recipe_name" itemprop="name">
      {{ recipe.name }}
    </h1>
    <small class="recipe_note">
      {% for i in 1..5 %}
      {% if recipe.note - i >= 0 %}
      <i class="material-icons">star</i>
      {% elseif recipe.note - i > -1 %}
      <i class="material-icons">star_half</i>
      {% else %}
      <i class="material-icons">star_border</i>
      {% endif %}
      {% endfor %}
    </small>


    <span style="display:none" itemprop="author">My recipes</span>
    <span style="display:none" itemprop="description">{{ recipe.description }}</span>
    <div style="display:none" itemprop="nutrition" itemscope itemtype="http://schema.org/NutritionInformation">
      Nutrition facts:
      <span itemprop="calories">0 calories</span>,
      <span itemprop="fatContent">0 grams fat</span>
    </div>
    <div style="display:none" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
      <span itemprop="ratingValue">{{ recipe.note }}</span> stars -
      based on <span itemprop="reviewCount">1</span> reviews
    </div>

    <div class="col s12 m6">
      <ul class="collection with-header">
        <li class="collection-item">
          <i class="material-icons">people</i> Quantité
          <span class="secondary-content">
            {% if recipe.forPerson is not null %}{{ recipe.forPerson }} personnes {% else %} -- {% endif %}
          </span>
        </li>
        <li class="collection-item">
          <i class="material-icons">alarm</i>Préparation
          <span itemprop="prepTime" content="PT{{ recipe.preparationTime }}M" class="secondary-content">
            {{ recipe.preparationTime }} min
          </span>
        </li>
        <li class="collection-item">
          <i class="material-icons">whatshot</i>Cuisson
          <span itemprop="cookTime" content="PT{{ recipe.cookTime }}M" class="secondary-content">
            {% if recipe.cookTime is not null %}{{ recipe.cookTime }} min {% else %} -- {% endif %}
          </span>
        </li>
        <li class="collection-item">
          <i class="material-icons">restore</i>Repos
          <span class="secondary-content">
            {% if recipe.restTime is not null %}{{ recipe.restTime }} min {% else %} -- {% endif %}
          </span>
        </li>
      </ul>
    </div>
    <div id="ingredient-wrapper" class="col s12 m6">
      <!-- Switch -->
      <div class="switch">
        <label>
          Garder les ingrédients affichés
          <input id="ingredient_modal_switch" type="checkbox">
          <span class="lever"></span>
        </label>
      </div>
      <ul id="ingredient-list" class="collection with-header">
        {% for part in recipe.ingredients|sortByPart %}
        {% if part.id is defined %}
        <li class="collection-header"><h4>{{part.name}}</h4></li>
        {% endif %}
        {% for recipeHasIngredient in part.ingredients %}
        <li itemprop="ingredients" class="collection-item">
          {{ recipeHasIngredient.ingredient.name }}
          <span class="secondary-content">
            {% if recipeHasIngredient.ingredient.units|length > 0  %}
            <span>{{ recipeHasIngredient.value }}</span>
            <select class="selectIngredient" data="{{ recipeHasIngredient.value }}">
              <option value="1">{{ recipeHasIngredient.ingredient.defaultUnit.symbol }}</option>
              {% for ingredientHasUnit in recipeHasIngredient.ingredient.units %}
              <option value="{{ ingredientHasUnit.value }}">{{ ingredientHasUnit.unit.symbol }}</option>
              {% endfor %}
            </select>
            {% else %}
            {{ recipeHasIngredient|getUnit }}
            {% endif %}
          </span>
        </li>
        {% endfor %}
        {% endfor %}
      </ul>
    </div>
    <div id="recipe_steps" class="col s12">
      {% for step in recipe.steps %}
      <div itemprop="recipeInstructions">{{ step.text }}</div><br>
      {% endfor %}
    </div>
  </div>
</div>

<script async="async" src="//platform.getbring.com/widgets/import.js"></script>
<script>
function notifyBrowser(title, desc)
{
  if (Notification.permission !== "granted")
  {
    Notification.requestPermission();
  }
  var notification = new Notification(title, {
    icon:'https://www.google.fr/url?sa=i&rct=j&q=&esrc=s&source=images&cd=&cad=rja&uact=8&ved=0ahUKEwiKx--d7bPWAhXCNxQKHXrbCXwQjRwIBw&url=https%3A%2F%2Fwww.mql5.com%2Fen%2Fmarket%2Fproduct%2F4494&psig=AFQjCNERTK2i6oJ06xpbqyn9bwyKzAIxkg&ust=1505999974491909',
    body: desc,
  });
  /* Callback function when the notification is closed. */
  notification.onclose = function () {
    console.log('Notification closed');
  };
}

$(function() {
  function timer(){
    $(".chrono").each(function(){
      var run = $(this).attr("running");
      if (run == "true"){
        var data = $(this).attr("data");
        $(this).children(".time").html(timeToString(data));
        $(this).attr("data", --data)
        if (data == -1){
          notifyBrowser("Minuterie terminé !", "");
          $(this).attr("running", false)
          $(this).children('.play').html("play_circle_filled");
        }
      }
    })
  }
  setInterval(timer, 1000);
});

$(".play.timer").click(function(){
  var data = $(this).parent('a');
  if (data.attr("running") == "true"){
    data.attr("running", false);
    data.children('.play').html("play_circle_filled");
  } else {
    data.attr("running", true);
    data.children('.play').html("pause_circle_filled");
    notifyBrowser("Minuterie lancé pour " + timeToString(data.attr("data")), "");
  }
})

$(".reset.timer").click(function(){
  var data = $(this).parent('a');
  data.children('.play').html("play_circle_filled");
  data.attr("data", data.attr("init"));
  data.attr("running", false);
  $(this).prev('.time').html(timeToString(data.attr("init")));
})

function timeToString(time){
  var h, m, s;
  h = Math.floor(time / 3600);
  if (h<10) h = "0" + h;
  m = Math.floor(time % 3600 / 60);
  if (m<10) m = "0" + m;
  s = Math.floor(time % 3600 % 60);
  if (s<10) s = "0" + s;
  return (h + ' : ' + m + ' : ' + s);
}

$(document).ready(function(){
  $('#ingredient-modal').modal({
    dismissible: false, // Modal can be dismissed by clicking outside of the modal
    opacity: 0, // Opacity of modal background
    ready: function(modal, trigger) { // Callback for Modal open. Modal and trigger parameters available.
      $(".modal-overlay").css("display", "none");
    },
    complete: function() {
      $("#recipe_steps").css("margin-bottom", "0");

    }
  });

  $("#ingredient_modal_switch").change(function(){
    if (this.checked) {
      $('#ingredient-modal').modal('open');
      $("#ingredient-list").hide("slow");
      $("#recipe_steps").css("margin-bottom", $("#ingredient-modal").height() - 100);
    }
    else{
      $("#ingredient-list").show("slow");
      $('#ingredient-modal').modal('close');
    }
  })
});
</script>
{% endblock %}
